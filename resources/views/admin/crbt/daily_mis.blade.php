@extends('admin.crbt.base')

@section('page_title', 'Daily CRBT MIS Report')
@section('report_title', 'Daily CRBT Activities Summary')

@section('report_content')
<!-- Filter Section -->
<div class="row g-3 mb-4">
    <div class="col-md-4">
        <input type="date" id="startDate" class="form-control" placeholder="Start date">
    </div>
    <div class="col-md-4">
        <input type="date" id="endDate" class="form-control" placeholder="End date">
    </div>
    <div class="col-md-4 d-grid">
        <button id="applyFilter" class="btn btn-primary">Apply Filter</button>
    </div>
</div>

<!-- Summary Cards -->
<div class="row g-4 mb-4">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h6 class="text-muted mb-3">Total Subscriptions</h6>
                <h3 class="f-w-300 d-flex align-items-center m-b-0" id="totalSubscriptions">
                    <i class="feather icon-user-plus text-primary f-24 m-r-5"></i>
                    <span>Loading...</span>
                </h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h6 class="text-muted mb-3">Total Unsubscriptions</h6>
                <h3 class="f-w-300 d-flex align-items-center m-b-0" id="totalUnsubscriptions">
                    <i class="feather icon-user-minus text-danger f-24 m-r-5"></i>
                    <span>Loading...</span>
                </h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h6 class="text-muted mb-3">Active Subscribers</h6>
                <h3 class="f-w-300 d-flex align-items-center m-b-0" id="activeSubscribers">
                    <i class="feather icon-users text-success f-24 m-r-5"></i>
                    <span>Loading...</span>
                </h3>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <h6 class="text-muted mb-3">Revenue</h6>
                <h3 class="f-w-300 d-flex align-items-center m-b-0" id="totalRevenue">
                    <i class="feather icon-dollar-sign text-warning f-24 m-r-5"></i>
                    <span>Loading...</span>
                </h3>
            </div>
        </div>
    </div>
</div>

<!-- Charts Section -->
<div class="row mt-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Subscription Trend</h5>
            </div>
            <div class="card-body">
                <canvas id="subscriptionChart" style="height: 300px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5>Revenue Trend</h5>
            </div>
            <div class="card-body">
                <canvas id="revenueChart" style="height: 300px;"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Data Table -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5>Daily CRBT MIS Data</h5>
            </div>
            <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Total Subscriptions</th>
                        <th>Total Unsubscriptions</th>
                        <th>Active Subscribers</th>
                        <th>Tone Downloads</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                        <tbody id="dailyMisBody">
                            <tr><td colspan="6" class="text-center">Loading...</td></tr>
                </tbody>
            </table>
                </div>
                
                <!-- Pagination -->
                <nav aria-label="Daily MIS pagination" class="mt-3">
                    <ul class="pagination justify-content-center" id="dailyMisPagination">
                        <!-- Pagination will be generated by JavaScript -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@push('scripts')
<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM Content Loaded');
        let subscriptionChart, revenueChart;
        let currentPage = 1;
        let totalPages = 1;
        let perPage = 10;
        
        // Test if elements exist
        console.log('Start date element:', document.getElementById('startDate'));
        console.log('End date element:', document.getElementById('endDate'));
        console.log('Apply filter button:', document.getElementById('applyFilter'));
        
        // Set default dates
        const today = new Date();
        const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
        document.getElementById('startDate').value = lastMonth.toISOString().split('T')[0];
        document.getElementById('endDate').value = today.toISOString().split('T')[0];
        
        // Test Chart.js
        console.log('Chart.js available:', typeof Chart !== 'undefined');

        function initCharts(labels = [], subs = [], revenue = []) {
        const subscriptionCtx = document.getElementById('subscriptionChart').getContext('2d');
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');

            if (subscriptionChart) subscriptionChart.destroy();
            if (revenueChart) revenueChart.destroy();

            subscriptionChart = new Chart(subscriptionCtx, {
            type: 'line',
                data: { labels, datasets: [{ label: 'Subscriptions', data: subs, borderColor: 'rgb(75, 192, 192)', tension: 0.1 }] },
                options: { responsive: true, maintainAspectRatio: false }
            });

            revenueChart = new Chart(revenueCtx, {
                type: 'bar',
                data: { labels, datasets: [{ label: 'Revenue', data: revenue, backgroundColor: 'rgba(54, 162, 235, 0.5)', borderColor: 'rgb(54, 162, 235)', borderWidth: 1 }] },
                options: { responsive: true, maintainAspectRatio: false }
            });
        }

        async function fetchDailyMIS(page = 1) {
            console.log('fetchDailyMIS called with page:', page);
            currentPage = page;
            const params = new URLSearchParams();
            const s = document.getElementById('startDate').value;
            const e = document.getElementById('endDate').value;
            console.log('Start date:', s, 'End date:', e);
            
            if (s) params.append('start_date', s);
            if (e) params.append('end_date', e);
            params.append('page', page);
            params.append('per_page', perPage);

            const url = `/api/crbt/daily-mis?${params.toString()}`;
            console.log('Fetching URL:', url);
            const tbody = document.getElementById('dailyMisBody');
            tbody.innerHTML = '<tr><td colspan="6" class="text-center">Loading...</td></tr>';

            try {
                const res = await fetch(url);
                const json = await res.json();
                const rows = Array.isArray(json.data) ? json.data : [];
                const pagination = json.pagination || {};

                console.log('Daily MIS API Response:', json);
                console.log('Rows count:', rows.length);
                console.log('Pagination:', pagination);
                
                // Update pagination info
                totalPages = pagination.last_page || 1;
                currentPage = pagination.current_page || 1;

                if (rows.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="6" class="text-center">No data</td></tr>';
                    
                    // Update summary cards to show 0 when no data
                    document.getElementById('totalSubscriptions').querySelector('span').textContent = '0';
                    document.getElementById('totalUnsubscriptions').querySelector('span').textContent = '0';
                    document.getElementById('activeSubscribers').querySelector('span').textContent = '0';
                    document.getElementById('totalRevenue').querySelector('span').textContent = '0';
                    
                    initCharts();
                    generatePagination(); // Generate pagination even if no data
                    return;
                }

                const labels = [];
                const subs = [];
                const rev = [];
                let totalSubs = 0, totalUnsubs = 0, totalActive = 0, totalRev = 0;
                tbody.innerHTML = '';

                        rows.forEach(r => {
                            const date = r.date || '';
                            // Map CRBT data structure to expected fields
                            const subsCount = Number(r.activeNrml || 0); // New subscriptions (daily activations)
                            const unsubsCount = Number(r.vchurnNrml || 0); // Unsubscriptions (daily deactivations)
                            const activeCount = Number(r.activeBase || 0); // Active subscribers (total active base)
                            const revenue = Number(r.SubsRev || 0) + Number(r.RenewRev || 0); // Total revenue
                            const toneDownloads = Number(r.VsmsSuccess || 0); // Tone downloads
                            
                            console.log('Processing row:', { date, subsCount, unsubsCount, activeCount, revenue, toneDownloads });
                            
                            labels.push(date);
                            subs.push(subsCount);
                            rev.push(revenue);
                            
                            totalSubs += subsCount;
                            totalUnsubs += unsubsCount;
                            totalActive += activeCount;
                            totalRev += revenue;
                            
                            tbody.insertAdjacentHTML('beforeend', `
                                <tr>
                                    <td>${date}</td>
                                    <td>${subsCount.toLocaleString()}</td>
                                    <td>${unsubsCount.toLocaleString()}</td>
                                    <td>${activeCount.toLocaleString()}</td>
                                    <td>${toneDownloads.toLocaleString()}</td>
                                    <td>${revenue.toLocaleString()}</td>
                                </tr>
                            `);
                        });

                // Update summary cards
                document.getElementById('totalSubscriptions').querySelector('span').textContent = totalSubs.toLocaleString();
                document.getElementById('totalUnsubscriptions').querySelector('span').textContent = totalUnsubs.toLocaleString();
                document.getElementById('activeSubscribers').querySelector('span').textContent = totalActive.toLocaleString();
                document.getElementById('totalRevenue').querySelector('span').textContent = totalRev.toLocaleString();

                // Generate pagination controls
                generatePagination();

                initCharts(labels, subs, rev);
            } catch (e) {
                tbody.innerHTML = `<tr><td colspan="6" class="text-danger text-center">Error loading data</td></tr>`;
                initCharts();
            }
        }

        function generatePagination() {
            const paginationContainer = document.getElementById('dailyMisPagination');
            if (!paginationContainer) return;

            let paginationHTML = '';

            // Previous button
            if (currentPage > 1) {
                paginationHTML += `<li class="page-item"><a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a></li>`;
            } else {
                paginationHTML += `<li class="page-item disabled"><span class="page-link">Previous</span></li>`;
            }

            // Page numbers
            const startPage = Math.max(1, currentPage - 2);
            const endPage = Math.min(totalPages, currentPage + 2);

            for (let i = startPage; i <= endPage; i++) {
                if (i === currentPage) {
                    paginationHTML += `<li class="page-item active"><span class="page-link">${i}</span></li>`;
                } else {
                    paginationHTML += `<li class="page-item"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                }
            }

            // Next button
            if (currentPage < totalPages) {
                paginationHTML += `<li class="page-item"><a class="page-link" href="#" data-page="${currentPage + 1}">Next</a></li>`;
            } else {
                paginationHTML += `<li class="page-item disabled"><span class="page-link">Next</span></li>`;
            }

            paginationContainer.innerHTML = paginationHTML;

            // Add event listeners to pagination links
            paginationContainer.querySelectorAll('a[data-page]').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const page = parseInt(this.getAttribute('data-page'));
                    fetchDailyMIS(page);
                });
            });
        }

        document.getElementById('applyFilter').addEventListener('click', function() {
            console.log('Apply Filter button clicked');
            fetchDailyMIS(1); // Reset to first page when filtering
        });
        
        
        console.log('Initial data load');
        fetchDailyMIS();
    });
</script>
@endpush 
@endsection